springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

spring:
  profiles:
    active: live # 해당 부분을 local로 설정 시 로컬 환경 적용, live로 설정 시 라이브 서버 환경 적용

--- # 운영 환경에 대한 설정
--- # 라이브 서버 환경에 대한 설정
google:
  oauth2_redirect_uri: https://comket.co.kr/oauth/google
  oauth2_client_id: ${GOOGLE_OAUTH2_CLIENT_ID}
  oauth2_client_secret: ${GOOGLE_OAUTH2_CLIENT_SECRET}

spring:
  baseurl: "http://comket-api.co.kr"

  config:
    activate:
      on-profile: live
  main:
    allow-bean-definition-overriding: true
  datasource:
    driverClassName: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://comket-rds.c3mka68c68ht.ap-northeast-2.rds.amazonaws.com:3306/comket
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
  jpa:
    # Show sql when spring data jpa performs query
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        # Format queries
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  devtools:
    restart:
      enabled: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: "${MAIL_APP_PASSWORD}"
    properties:
      mail:
        smtp:
          auth: true # SMTP 서버에 인증 필요한 경우 true로 설정 Gmail은 요구함
          starttls:
            enable: true # SMTP 서버가 TLS를 사용하여 안전한 연결을 요구하는 경우 true로 설정
            required: true
          connectiontimeout: 5000 # 클라이언트가 SMTP 서버에 연결을 설정하기 위해 대기하는 최대 시간 (밀리초 단위)
          timeout: 5000 # 클라이언트가 SMTP 서버와 통신하기 위해 대기하는 최대 시간 (밀리초 단위)
          writetimeout: 5000 # 클라이언트가 SMTP 서버에 데이터를 쓰기 위해 대기하는 최대 시간 (밀리초 단위)
    auth-code-expiration-millis: 300000 # 인증 코드 만료 시간 = 5분 (Milliseconds)
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
jwt:
  secret: ${JWT_SECRET}
management:
  endpoints:
    web:
      exposure:
        include: health
  security:
    enabled: false
